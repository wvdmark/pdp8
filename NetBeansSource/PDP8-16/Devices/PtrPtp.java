/*
 * PtpPtr.java
 *
 * Created on 20 July 2005, 17:59
 */

package Devices;

/**
 *
 * @author  wvdmark@computer.org
 */
import javax.swing.*;
import java.awt.event.*;

public class PtrPtp extends javax.swing.JFrame implements MouseListener, ActionListener {

    /** Creates new form PtpPtr */
    public PtrPtp(Logic.PC8E pc8e) {
        this.pc8e = pc8e;
        setTitle("PC8E");
        initComponents();
        pRead1.startPT(this,"pRead1");
        pRead2.startPT(this,"pRead2");
        pPunch1.startPT(this,"pPunch1");
        ptpSwitch1.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                prpPropertyChange(evt);
            }
        });
        ptpSwitch2.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                prpPropertyChange(evt);
            }
        });
        ptrSwitch1.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                prpPropertyChange(evt);
            }
        });
        ptrSwitch2.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                prpPropertyChange(evt);
            }
        });
        addMouseListener(this);
        junit[0] = new JMenu("Reader");
        JMenuItem mount0 = new JMenuItem("Open input reader");
        mount0.addActionListener(this);
        mount0.setName("0");
        junit[0].add(mount0);
        JMenuItem mount0b = new JMenuItem("Open input reader hispeed");
        mount0b.addActionListener(this);
        mount0b.setName("1");
        junit[0].add(mount0b);
        JMenuItem unmount0 = new JMenuItem("Remove/Close reader");
        unmount0.addActionListener(this);
        unmount0.setName("2");
        junit[0].add(unmount0);
        jPopupMenu1.add(junit[0]);
        junit[1] = new JMenu("Punch");
        JMenuItem mount1 = new JMenuItem("Open output punch 8-bit");
        mount1.addActionListener(this);
        mount1.setName("3");
        junit[1].add(mount1);
        JMenuItem mount1b = new JMenuItem("Open output punch 7-bit hispeed");
        mount1b.addActionListener(this);
        mount1b.setName("4");
        junit[1].add(mount1b);
        JMenuItem mount1c = new JMenuItem("Open output punch 8-bit hispeed");
        mount1c.addActionListener(this);
        mount1c.setName("5");
        junit[1].add(mount1c);
        JMenuItem unmount1 = new JMenuItem("Remove/Close punch");
        unmount1.addActionListener(this);
        unmount1.setName("6");
        junit[1].add(unmount1);
        jPopupMenu1.add(junit[1]);

        chooser = new javax.swing.JFileChooser();
        chooser.addChoosableFileFilter(new ImageFileFilter());
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jPopupMenu1 = new javax.swing.JPopupMenu();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        ptpSwitch1 = new Devices.DTSwitch();
        jLabel4 = new javax.swing.JLabel();
        ptpSwitch2 = new Devices.DTSwitch();
        jLabel5 = new javax.swing.JLabel();
        ptrSwitch1 = new Devices.DTSwitch();
        jLabel2 = new javax.swing.JLabel();
        ptrSwitch2 = new Devices.DTSwitch();
        jPanel6 = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        pDiodes = new javax.swing.JLabel();
        pRead1 = new Devices.PTape();
        pRead2 = new Devices.PTape();
        jPanel5 = new javax.swing.JPanel();
        pPunch1 = new Devices.PTape();

        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                exitForm(evt);
            }
        });
        getContentPane().setLayout(new java.awt.GridBagLayout());

        jPanel1.setBorder(javax.swing.BorderFactory.createCompoundBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 255), 6, true), new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true)));
        jPanel1.setMaximumSize(new java.awt.Dimension(100, 100));
        jPanel1.setMinimumSize(new java.awt.Dimension(300, 150));
        jPanel1.setPreferredSize(new java.awt.Dimension(600, 300));
        jPanel1.setLayout(new java.awt.GridBagLayout());

        jPanel2.setBackground(new java.awt.Color(0, 0, 0));
        jPanel2.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel2.setMinimumSize(new java.awt.Dimension(292, 34));
        jPanel2.setPreferredSize(new java.awt.Dimension(584, 68));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        jPanel1.add(jPanel2, gridBagConstraints);

        jPanel3.setBackground(new java.awt.Color(0, 0, 0));
        jPanel3.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel3.setMinimumSize(new java.awt.Dimension(222, 34));
        jPanel3.setPreferredSize(new java.awt.Dimension(444, 68));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        jPanel1.add(jPanel3, gridBagConstraints);

        jPanel4.setBackground(new java.awt.Color(0, 0, 0));
        jPanel4.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 255), 3, true));
        jPanel4.setMinimumSize(new java.awt.Dimension(42, 74));
        jPanel4.setPreferredSize(new java.awt.Dimension(84, 148));
        jPanel4.setLayout(new java.awt.GridBagLayout());

        jLabel3.setFont(new java.awt.Font("MS Sans Serif", 0, 9));
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Off  Punch  On");
        jLabel3.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jLabel3.setPreferredSize(new java.awt.Dimension(70, 18));
        jPanel4.add(jLabel3, new java.awt.GridBagConstraints());

        ptpSwitch1.setHorizontal(true);
        ptpSwitch1.setMinimumSize(new java.awt.Dimension(25, 9));
        ptpSwitch1.setName("2"); // NOI18N
        ptpSwitch1.setPos(2);
        ptpSwitch1.setPreferredSize(new java.awt.Dimension(50, 18));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        jPanel4.add(ptpSwitch1, gridBagConstraints);

        jLabel4.setFont(new java.awt.Font("MS Sans Serif", 0, 8));
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel4.setText("Feed");
        jLabel4.setPreferredSize(new java.awt.Dimension(70, 12));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        jPanel4.add(jLabel4, gridBagConstraints);

        ptpSwitch2.setHorizontal(true);
        ptpSwitch2.setMinimumSize(new java.awt.Dimension(25, 9));
        ptpSwitch2.setMomentary(true);
        ptpSwitch2.setName("3"); // NOI18N
        ptpSwitch2.setPos(2);
        ptpSwitch2.setPreferredSize(new java.awt.Dimension(50, 18));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        jPanel4.add(ptpSwitch2, gridBagConstraints);

        jLabel5.setBackground(new java.awt.Color(0, 0, 0));
        jLabel5.setFont(new java.awt.Font("MS Sans Serif", 0, 9));
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("Off  Reader  On");
        jLabel5.setMinimumSize(new java.awt.Dimension(42, 6));
        jLabel5.setOpaque(true);
        jLabel5.setPreferredSize(new java.awt.Dimension(70, 18));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        jPanel4.add(jLabel5, gridBagConstraints);

        ptrSwitch1.setHorizontal(true);
        ptrSwitch1.setMinimumSize(new java.awt.Dimension(25, 9));
        ptrSwitch1.setName("0"); // NOI18N
        ptrSwitch1.setPos(2);
        ptrSwitch1.setPreferredSize(new java.awt.Dimension(50, 18));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        jPanel4.add(ptrSwitch1, gridBagConstraints);

        jLabel2.setFont(new java.awt.Font("MS Sans Serif", 0, 8));
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel2.setText("Feed");
        jLabel2.setPreferredSize(new java.awt.Dimension(76, 12));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        jPanel4.add(jLabel2, gridBagConstraints);

        ptrSwitch2.setHorizontal(true);
        ptrSwitch2.setMinimumSize(new java.awt.Dimension(25, 9));
        ptrSwitch2.setMomentary(true);
        ptrSwitch2.setName("1"); // NOI18N
        ptrSwitch2.setPos(2);
        ptrSwitch2.setPreferredSize(new java.awt.Dimension(50, 18));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 7;
        jPanel4.add(ptrSwitch2, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridheight = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        jPanel1.add(jPanel4, gridBagConstraints);

        jPanel6.setBackground(new java.awt.Color(51, 51, 51));
        jPanel6.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel6.setMinimumSize(new java.awt.Dimension(74, 15));
        jPanel6.setPreferredSize(new java.awt.Dimension(148, 30));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTH;
        jPanel1.add(jPanel6, gridBagConstraints);

        jPanel7.setBackground(new java.awt.Color(51, 51, 51));
        jPanel7.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel7.setMinimumSize(new java.awt.Dimension(74, 55));
        jPanel7.setPreferredSize(new java.awt.Dimension(148, 106));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.SOUTH;
        jPanel1.add(jPanel7, gridBagConstraints);

        pDiodes.setBackground(new java.awt.Color(102, 102, 102));
        pDiodes.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        pDiodes.setMinimumSize(new java.awt.Dimension(74, 6));
        pDiodes.setOpaque(true);
        pDiodes.setPreferredSize(new java.awt.Dimension(148, 12));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        jPanel1.add(pDiodes, gridBagConstraints);

        pRead1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridheight = 3;
        jPanel1.add(pRead1, gridBagConstraints);

        pRead2.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        pRead2.setRight(true);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridheight = 3;
        jPanel1.add(pRead2, gridBagConstraints);

        jPanel5.setBackground(new java.awt.Color(0, 0, 0));
        jPanel5.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel5.setMinimumSize(new java.awt.Dimension(42, 34));
        jPanel5.setPreferredSize(new java.awt.Dimension(84, 68));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 4;
        jPanel1.add(jPanel5, gridBagConstraints);

        pPunch1.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true));
        pPunch1.setMinimumSize(new java.awt.Dimension(28, 110));
        pPunch1.setPreferredSize(new java.awt.Dimension(56, 216));
        pPunch1.setRight(true);
        pPunch1.setUnit(1);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridheight = 4;
        jPanel1.add(pPunch1, gridBagConstraints);

        getContentPane().add(jPanel1, new java.awt.GridBagConstraints());

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /** Exit the Application */
    private void exitForm(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_exitForm
        pc8e.data.CloseAllDevs();
        //System.exit(0);
    }//GEN-LAST:event_exitForm
    private void prpPropertyChange(java.beans.PropertyChangeEvent evt) {
        Integer objswr = (Integer) evt.getNewValue();
        int val = objswr.intValue();
        int mask = Integer.parseInt(evt.getPropertyName());
        int unit = (mask)>>1;
        switch (mask&01) {
            case 0: selTape(unit,val); break;
            case 1: moveTape(unit,val); break;
        }
    }

    private void selTape(int unit, int val){
        if (val==1) {
            pc8e.sel[unit] = true;
            local[unit] = false;
        }
        else {
            pc8e.sel[unit] = false;
            if (val==2) local[unit] = true;
            else local[unit] = false;
        }
    }

    private void moveTape(int unit, int val){
        if (local[unit]==true){
            switch (val) {
                case 1: direction[unit] = 1; break;
                //case 0: direction[unit] = 0; break;
                case 2: direction[unit] = 0; break;
            }
        }
    }

    public void closeTape(int unit) {
        if (pc8e.tape[unit]!=null) {
            try {
                pc8e.tape[unit].close();
            }
            catch(java.io.IOException e){
            }
            pc8e.tape[unit]=null;
            pc8e.havetape[unit] = false;
            tapesize[unit] = 0;
            pc8e.line[unit] = 0;
            if (unit==0) junit[unit].setText("Reader");
            else junit[unit].setText("Punch");
        }
    }

    public void mouseClicked(MouseEvent e) {
        if (e.isPopupTrigger()) {
            jPopupMenu1.show(e.getComponent(),e.getX(),e.getY());
        }
    }

    public void mouseEntered(MouseEvent e) {
    }

    public void mouseExited(MouseEvent e) {
    }

    public void mousePressed(MouseEvent e) {
        if (e.isPopupTrigger()) {
            jPopupMenu1.show(e.getComponent(),e.getX(),e.getY());
        }
    }

    public void mouseReleased(MouseEvent e) {
        if (e.isPopupTrigger()) {
            jPopupMenu1.show(e.getComponent(),e.getX(),e.getY());
        }
    }

    public void actionPerformed(java.awt.event.ActionEvent e) {
        AbstractButton x = (AbstractButton)(e.getSource());
        Integer val =  new Integer(Integer.parseInt(x.getName()));
        pc8e.sevenbit = false;
        pc8e.punhispeed = false;
        pc8e.rdrhispeed = false;
        switch (val.intValue()&07) {
            case 0: pc8e.rdrhispeed = false; openTape(0); break;
            case 1: pc8e.rdrhispeed = true;  openTape(0); break;
            case 2: closeTape(0); break;
            case 3: pc8e.sevenbit = false; pc8e.punhispeed = false; openTape(1); break;
            case 4: pc8e.sevenbit = true;  pc8e.punhispeed = true;  openTape(1); break;
            case 5: pc8e.sevenbit = false; pc8e.punhispeed = true;  openTape(1); break;
            case 6: closeTape(1); break;
        }
        repaint();
    }
    private void openTape(int unit) {
        int option;
        //chooser.addChoosableFileFilter(new ImageFileFilter());
        String dfile = pc8e.data.getProp("PtrPtp-"+ unit);
        if (dfile!=null) chooser.setSelectedFile(new java.io.File(dfile));
        if (unit==0) option = chooser.showOpenDialog(this);
        else option = chooser.showSaveDialog(this);
        if (option == javax.swing.JFileChooser.APPROVE_OPTION) {
            java.io.File file = chooser.getSelectedFile();
            if (file != null) {
                closeTape(unit);
                try {
                    if (file.isFile()) {
                        if (unit==0) {
                            if (file.canRead() ){
                                pc8e.tape[unit] = new java.io.RandomAccessFile(file,"r");
                                tapesize[unit] = (int)file.length();
                                pc8e.line[unit] = 0;
                                pc8e.havetape[unit] = true;
                                pc8e.fetching = false;
                                junit[unit].setText("Reader: " + file.getName());
                                pc8e.data.setProp("PtrPtp-"+ unit, file.getCanonicalPath());
                            } else {System.out.println("File seems to be busy!");}
                        }
                    }
                    if (unit==1) {
                        if (file.length()==0 ){
                            pc8e.tape[unit] = new java.io.RandomAccessFile(file,"rw");
                            tapesize[unit] = 10000;
                            pc8e.line[unit] = 0;
                            pc8e.havetape[unit] = true;
                            junit[unit].setText("Punch: " + file.getName());
                            pc8e.data.setProp("PtrPtp-"+ unit, file.getCanonicalPath());
                        } else {System.out.println("File seems to be busy!");}
                    }

                }
                catch(java.io.IOException e){ System.out.println(e);
                }
            }
        } else System.out.println("No file selected");
    }


    private static class ImageFileFilter extends javax.swing.filechooser.FileFilter {

        public boolean accept(java.io.File file) {
            if (file == null)
                return false;
            return file.isDirectory() || file.getName().toLowerCase().endsWith(".pt") || file.getName().toLowerCase().endsWith(".bin");
        }

        public String getDescription() {
            return "Paper tapes (*.pt, *.bin)";
        }

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPopupMenu jPopupMenu1;
    public javax.swing.JLabel pDiodes;
    public Devices.PTape pPunch1;
    private Devices.PTape pRead1;
    private Devices.PTape pRead2;
    private Devices.DTSwitch ptpSwitch1;
    private Devices.DTSwitch ptpSwitch2;
    private Devices.DTSwitch ptrSwitch1;
    private Devices.DTSwitch ptrSwitch2;
    // End of variables declaration//GEN-END:variables
    public Logic.PC8E pc8e;
    public int[] tapesize = {0,0};
    public boolean[] local = {true,true};
    public int[] direction = {0,0};
    JMenu junit[] = {null,null};
    javax.swing.JFileChooser chooser;
}
