/*
 * Dectape.java
 *
 * Created on May 29, 2005, 12:57 PM
 */
/**
 *
 * @author  wvdmark@computer.org
 */
package Devices;

import javax.swing.*;
import java.awt.event.*;

public class Dectape extends JFrame implements Logic.Constants, MouseListener, ActionListener {

    /** Creates new form Dectape */
    public Dectape(Logic.TD8E td8e) {
        this.td8e = td8e;
        setTitle("TU56");
        initComponents();
        dTReel1.startDt(this, "dTReel1");
        dTReel2.startDt(this, "dTReel2");
        dTReel3.startDt(this, "dTReel3");
        dTReel4.startDt(this, "dTReel4");
        wlSwitch0.addPropertyChangeListener(new java.beans.PropertyChangeListener() {

            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                dtPropertyChange(evt);
            }
        });
        mvSwitch0.addPropertyChangeListener(new java.beans.PropertyChangeListener() {

            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                dtPropertyChange(evt);
            }
        });
        rlSwitch0.addPropertyChangeListener(new java.beans.PropertyChangeListener() {

            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                dtPropertyChange(evt);
            }
        });
        wlSwitch1.addPropertyChangeListener(new java.beans.PropertyChangeListener() {

            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                dtPropertyChange(evt);
            }
        });
        mvSwitch1.addPropertyChangeListener(new java.beans.PropertyChangeListener() {

            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                dtPropertyChange(evt);
            }
        });
        rlSwitch1.addPropertyChangeListener(new java.beans.PropertyChangeListener() {

            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                dtPropertyChange(evt);
            }
        });
        addMouseListener(this);
        junit[0] = new JMenu("Unit 0");
        JMenuItem mount0 = new JMenuItem("Mount tape");
        mount0.addActionListener(this);
        mount0.setName("0");
        junit[0].add(mount0);
        JMenuItem unmount0 = new JMenuItem("Remove tape");
        unmount0.addActionListener(this);
        unmount0.setName("1");
        junit[0].add(unmount0);
        jPopupMenu1.add(junit[0]);
        junit[1] = new JMenu("Unit 1");
        JMenuItem mount1 = new JMenuItem("Mount tape");
        mount1.addActionListener(this);
        mount1.setName("2");
        junit[1].add(mount1);
        JMenuItem unmount1 = new JMenuItem("Remove tape");
        unmount1.addActionListener(this);
        unmount1.setName("3");
        junit[1].add(unmount1);
        jPopupMenu1.add(junit[1]);
        jPopupMenu1.addSeparator();
        ButtonGroup group = new ButtonGroup();
        nowtm = new JRadioButtonMenuItem("Write Data (WTM off)");
        nowtm.addActionListener(this);
        nowtm.setName("4");
        nowtm.setSelected(true);
        group.add(nowtm);
        jPopupMenu1.add(nowtm);
        JRadioButtonMenuItem wtm1 = new JRadioButtonMenuItem("Format PDP8 (WTM on)");
        wtm1.addActionListener(this);
        wtm1.setName("5");
        group.add(wtm1);
        jPopupMenu1.add(wtm1);
        JRadioButtonMenuItem wtm2 = new JRadioButtonMenuItem("Format PDP10 (WTM on)");
        wtm2.addActionListener(this);
        wtm2.setName("6");
        group.add(wtm2);
        jPopupMenu1.add(wtm2);

        chooser = new javax.swing.JFileChooser();
        chooser.addChoosableFileFilter(new ImageFileFilter());
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jPopupMenu1 = new javax.swing.JPopupMenu();
        jPanel2 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        wlLamp0 = new javax.swing.JLabel();
        rlSwitch0 = new Devices.DTSwitch();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        wlSwitch0 = new Devices.DTSwitch();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        mvSwitch0 = new Devices.DTSwitch();
        selLamp0 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        wlLamp1 = new javax.swing.JLabel();
        rlSwitch1 = new Devices.DTSwitch();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        wlSwitch1 = new Devices.DTSwitch();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        mvSwitch1 = new Devices.DTSwitch();
        selLamp1 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        dTReel1 = new Devices.DTReel();
        dTReel2 = new Devices.DTReel();
        dTReel3 = new Devices.DTReel();
        dTReel4 = new Devices.DTReel();

        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                exitForm(evt);
            }
        });
        getContentPane().setLayout(new java.awt.GridBagLayout());

        jPanel2.setBackground(new java.awt.Color(0, 0, 0));
        jPanel2.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 255), 8, true));
        jPanel2.setMaximumSize(new java.awt.Dimension(600, 330));
        jPanel2.setMinimumSize(new java.awt.Dimension(300, 165));
        jPanel2.setPreferredSize(new java.awt.Dimension(600, 330));
        jPanel2.setLayout(new java.awt.GridBagLayout());

        jPanel1.setBackground(new java.awt.Color(102, 102, 102));
        jPanel1.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 11), javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255), 2), javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 7))));
        jPanel1.setMaximumSize(new java.awt.Dimension(280, 88));
        jPanel1.setMinimumSize(new java.awt.Dimension(135, 44));
        jPanel1.setPreferredSize(new java.awt.Dimension(280, 88));
        jPanel1.setLayout(new java.awt.GridBagLayout());

        wlLamp0.setBackground(new java.awt.Color(102, 102, 102));
        wlLamp0.setFont(new java.awt.Font("Lucida Grande", 0, 6));
        wlLamp0.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        wlLamp0.setText("Write");
        wlLamp0.setToolTipText("Write ");
        wlLamp0.setAlignmentX(0.5F);
        wlLamp0.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        wlLamp0.setMaximumSize(new java.awt.Dimension(16, 48));
        wlLamp0.setMinimumSize(new java.awt.Dimension(8, 24));
        wlLamp0.setOpaque(true);
        wlLamp0.setPreferredSize(new java.awt.Dimension(16, 48));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridheight = 2;
        jPanel1.add(wlLamp0, gridBagConstraints);

        rlSwitch0.setMaximumSize(new java.awt.Dimension(16, 48));
        rlSwitch0.setMinimumSize(new java.awt.Dimension(8, 24));
        rlSwitch0.setName("2"); // NOI18N
        rlSwitch0.setPos3(true);
        rlSwitch0.setPreferredSize(new java.awt.Dimension(16, 48));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 8;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridheight = 2;
        jPanel1.add(rlSwitch0, gridBagConstraints);

        jLabel2.setBackground(new java.awt.Color(0, 0, 0));
        jLabel2.setFont(new java.awt.Font("Arial Unicode MS", 0, 8));
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText(" • Write");
        jLabel2.setToolTipText("Write enable");
        jLabel2.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        jLabel2.setMaximumSize(new java.awt.Dimension(30, 24));
        jLabel2.setMinimumSize(new java.awt.Dimension(19, 12));
        jLabel2.setOpaque(true);
        jLabel2.setPreferredSize(new java.awt.Dimension(38, 24));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        jPanel1.add(jLabel2, gridBagConstraints);

        jLabel3.setBackground(new java.awt.Color(0, 0, 0));
        jLabel3.setFont(new java.awt.Font("Arial Unicode MS", 0, 8));
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel3.setText("Local • ");
        jLabel3.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jLabel3.setMaximumSize(new java.awt.Dimension(46, 24));
        jLabel3.setMinimumSize(new java.awt.Dimension(23, 12));
        jLabel3.setOpaque(true);
        jLabel3.setPreferredSize(new java.awt.Dimension(46, 24));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 7;
        gridBagConstraints.gridy = 1;
        jPanel1.add(jLabel3, gridBagConstraints);

        jLabel4.setBackground(new java.awt.Color(0, 0, 0));
        jLabel4.setMaximumSize(new java.awt.Dimension(4, 48));
        jLabel4.setMinimumSize(new java.awt.Dimension(2, 24));
        jLabel4.setOpaque(true);
        jLabel4.setPreferredSize(new java.awt.Dimension(4, 48));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 9;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridheight = 2;
        jPanel1.add(jLabel4, gridBagConstraints);

        jLabel5.setBackground(new java.awt.Color(0, 0, 0));
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("0");
        jLabel5.setToolTipText("Unit select 0");
        jLabel5.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 9), javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255))));
        jLabel5.setMaximumSize(new java.awt.Dimension(48, 48));
        jLabel5.setMinimumSize(new java.awt.Dimension(24, 24));
        jLabel5.setOpaque(true);
        jLabel5.setPreferredSize(new java.awt.Dimension(48, 48));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridheight = 2;
        jPanel1.add(jLabel5, gridBagConstraints);

        wlSwitch0.setMaximumSize(new java.awt.Dimension(16, 48));
        wlSwitch0.setMinimumSize(new java.awt.Dimension(8, 24));
        wlSwitch0.setName("0"); // NOI18N
        wlSwitch0.setPos(1);
        wlSwitch0.setPreferredSize(new java.awt.Dimension(16, 48));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridheight = 2;
        jPanel1.add(wlSwitch0, gridBagConstraints);

        jLabel6.setBackground(new java.awt.Color(0, 0, 0));
        jLabel6.setFont(new java.awt.Font("Arial Unicode MS", 0, 8));
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel6.setText("Remote • ");
        jLabel6.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        jLabel6.setMaximumSize(new java.awt.Dimension(46, 24));
        jLabel6.setMinimumSize(new java.awt.Dimension(23, 12));
        jLabel6.setOpaque(true);
        jLabel6.setPreferredSize(new java.awt.Dimension(46, 24));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 7;
        gridBagConstraints.gridy = 0;
        jPanel1.add(jLabel6, gridBagConstraints);

        jLabel7.setBackground(new java.awt.Color(0, 0, 0));
        jLabel7.setFont(new java.awt.Font("Arial Unicode MS", 0, 8));
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText(" •  Lock");
        jLabel7.setToolTipText("Write lock");
        jLabel7.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jLabel7.setMaximumSize(new java.awt.Dimension(30, 24));
        jLabel7.setMinimumSize(new java.awt.Dimension(19, 12));
        jLabel7.setOpaque(true);
        jLabel7.setPreferredSize(new java.awt.Dimension(38, 24));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 1;
        jPanel1.add(jLabel7, gridBagConstraints);

        mvSwitch0.setMaximumSize(new java.awt.Dimension(16, 48));
        mvSwitch0.setMinimumSize(new java.awt.Dimension(8, 24));
        mvSwitch0.setMomentary(true);
        mvSwitch0.setName("1"); // NOI18N
        mvSwitch0.setPos3(true);
        mvSwitch0.setPreferredSize(new java.awt.Dimension(16, 48));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridheight = 2;
        jPanel1.add(mvSwitch0, gridBagConstraints);

        selLamp0.setBackground(new java.awt.Color(102, 102, 102));
        selLamp0.setFont(new java.awt.Font("Lucida Grande", 0, 6));
        selLamp0.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        selLamp0.setText("Select");
        selLamp0.setToolTipText("Remote select");
        selLamp0.setMaximumSize(new java.awt.Dimension(16, 48));
        selLamp0.setMinimumSize(new java.awt.Dimension(8, 24));
        selLamp0.setOpaque(true);
        selLamp0.setPreferredSize(new java.awt.Dimension(16, 48));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 10;
        gridBagConstraints.gridheight = 2;
        jPanel1.add(selLamp0, gridBagConstraints);

        jLabel9.setBackground(new java.awt.Color(0, 0, 0));
        jLabel9.setFont(new java.awt.Font("Arial Unicode MS", 1, 14));
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel9.setText("←");
        jLabel9.setToolTipText("Reverse");
        jLabel9.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jLabel9.setMaximumSize(new java.awt.Dimension(20, 24));
        jLabel9.setMinimumSize(new java.awt.Dimension(10, 12));
        jLabel9.setOpaque(true);
        jLabel9.setPreferredSize(new java.awt.Dimension(20, 24));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 1;
        jPanel1.add(jLabel9, gridBagConstraints);

        jLabel10.setBackground(new java.awt.Color(0, 0, 0));
        jLabel10.setMaximumSize(new java.awt.Dimension(4, 48));
        jLabel10.setMinimumSize(new java.awt.Dimension(2, 24));
        jLabel10.setOpaque(true);
        jLabel10.setPreferredSize(new java.awt.Dimension(4, 48));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridheight = 2;
        jPanel1.add(jLabel10, gridBagConstraints);

        jLabel11.setBackground(new java.awt.Color(0, 0, 0));
        jLabel11.setFont(new java.awt.Font("Arial Unicode MS", 1, 14));
        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel11.setText("→");
        jLabel11.setToolTipText("Forward");
        jLabel11.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        jLabel11.setMaximumSize(new java.awt.Dimension(20, 24));
        jLabel11.setMinimumSize(new java.awt.Dimension(10, 12));
        jLabel11.setOpaque(true);
        jLabel11.setPreferredSize(new java.awt.Dimension(20, 24));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 0;
        jPanel1.add(jLabel11, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        jPanel2.add(jPanel1, gridBagConstraints);

        jPanel3.setBackground(new java.awt.Color(102, 102, 102));
        jPanel3.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 11), javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255), 2), javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 7))));
        jPanel3.setMaximumSize(new java.awt.Dimension(280, 88));
        jPanel3.setMinimumSize(new java.awt.Dimension(135, 44));
        jPanel3.setPreferredSize(new java.awt.Dimension(280, 88));
        jPanel3.setLayout(new java.awt.GridBagLayout());

        wlLamp1.setBackground(new java.awt.Color(102, 102, 102));
        wlLamp1.setFont(new java.awt.Font("Lucida Grande", 0, 6));
        wlLamp1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        wlLamp1.setText("Write");
        wlLamp1.setToolTipText("Write");
        wlLamp1.setMaximumSize(new java.awt.Dimension(16, 48));
        wlLamp1.setMinimumSize(new java.awt.Dimension(8, 24));
        wlLamp1.setOpaque(true);
        wlLamp1.setPreferredSize(new java.awt.Dimension(16, 48));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridheight = 2;
        jPanel3.add(wlLamp1, gridBagConstraints);

        rlSwitch1.setMaximumSize(new java.awt.Dimension(16, 48));
        rlSwitch1.setMinimumSize(new java.awt.Dimension(8, 24));
        rlSwitch1.setName("6"); // NOI18N
        rlSwitch1.setPos3(true);
        rlSwitch1.setPreferredSize(new java.awt.Dimension(16, 48));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 8;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridheight = 2;
        jPanel3.add(rlSwitch1, gridBagConstraints);

        jLabel13.setBackground(new java.awt.Color(0, 0, 0));
        jLabel13.setFont(new java.awt.Font("Arial Unicode MS", 0, 8));
        jLabel13.setForeground(new java.awt.Color(255, 255, 255));
        jLabel13.setText(" • Write");
        jLabel13.setToolTipText("Write enable");
        jLabel13.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        jLabel13.setMaximumSize(new java.awt.Dimension(30, 26));
        jLabel13.setMinimumSize(new java.awt.Dimension(19, 12));
        jLabel13.setOpaque(true);
        jLabel13.setPreferredSize(new java.awt.Dimension(38, 24));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        jPanel3.add(jLabel13, gridBagConstraints);

        jLabel14.setBackground(new java.awt.Color(0, 0, 0));
        jLabel14.setFont(new java.awt.Font("Arial Unicode MS", 0, 8));
        jLabel14.setForeground(new java.awt.Color(255, 255, 255));
        jLabel14.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel14.setText("Local • ");
        jLabel14.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jLabel14.setMaximumSize(new java.awt.Dimension(46, 24));
        jLabel14.setMinimumSize(new java.awt.Dimension(23, 12));
        jLabel14.setOpaque(true);
        jLabel14.setPreferredSize(new java.awt.Dimension(46, 24));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 7;
        gridBagConstraints.gridy = 1;
        jPanel3.add(jLabel14, gridBagConstraints);

        jLabel15.setBackground(new java.awt.Color(0, 0, 0));
        jLabel15.setMaximumSize(new java.awt.Dimension(4, 48));
        jLabel15.setMinimumSize(new java.awt.Dimension(2, 24));
        jLabel15.setOpaque(true);
        jLabel15.setPreferredSize(new java.awt.Dimension(4, 48));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 9;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridheight = 2;
        jPanel3.add(jLabel15, gridBagConstraints);

        wlSwitch1.setMaximumSize(new java.awt.Dimension(16, 48));
        wlSwitch1.setMinimumSize(new java.awt.Dimension(8, 24));
        wlSwitch1.setName("4"); // NOI18N
        wlSwitch1.setPos(1);
        wlSwitch1.setPreferredSize(new java.awt.Dimension(16, 48));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridheight = 2;
        jPanel3.add(wlSwitch1, gridBagConstraints);

        jLabel17.setBackground(new java.awt.Color(0, 0, 0));
        jLabel17.setFont(new java.awt.Font("Arial Unicode MS", 0, 8));
        jLabel17.setForeground(new java.awt.Color(255, 255, 255));
        jLabel17.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel17.setText("Remote • ");
        jLabel17.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        jLabel17.setMaximumSize(new java.awt.Dimension(46, 24));
        jLabel17.setMinimumSize(new java.awt.Dimension(23, 12));
        jLabel17.setOpaque(true);
        jLabel17.setPreferredSize(new java.awt.Dimension(46, 24));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 7;
        gridBagConstraints.gridy = 0;
        jPanel3.add(jLabel17, gridBagConstraints);

        jLabel18.setBackground(new java.awt.Color(0, 0, 0));
        jLabel18.setFont(new java.awt.Font("Arial Unicode MS", 0, 8));
        jLabel18.setForeground(new java.awt.Color(255, 255, 255));
        jLabel18.setText(" • Lock");
        jLabel18.setToolTipText("Write lock");
        jLabel18.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jLabel18.setMaximumSize(new java.awt.Dimension(38, 24));
        jLabel18.setMinimumSize(new java.awt.Dimension(19, 12));
        jLabel18.setOpaque(true);
        jLabel18.setPreferredSize(new java.awt.Dimension(38, 24));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 1;
        jPanel3.add(jLabel18, gridBagConstraints);

        mvSwitch1.setMaximumSize(new java.awt.Dimension(16, 48));
        mvSwitch1.setMinimumSize(new java.awt.Dimension(8, 24));
        mvSwitch1.setMomentary(true);
        mvSwitch1.setName("5"); // NOI18N
        mvSwitch1.setPos3(true);
        mvSwitch1.setPreferredSize(new java.awt.Dimension(16, 48));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridheight = 2;
        jPanel3.add(mvSwitch1, gridBagConstraints);

        selLamp1.setBackground(new java.awt.Color(102, 102, 102));
        selLamp1.setFont(new java.awt.Font("Lucida Grande", 0, 6));
        selLamp1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        selLamp1.setText("Select");
        selLamp1.setToolTipText("Remote select");
        selLamp1.setMaximumSize(new java.awt.Dimension(16, 48));
        selLamp1.setMinimumSize(new java.awt.Dimension(8, 24));
        selLamp1.setOpaque(true);
        selLamp1.setPreferredSize(new java.awt.Dimension(16, 48));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 10;
        gridBagConstraints.gridheight = 2;
        jPanel3.add(selLamp1, gridBagConstraints);

        jLabel20.setBackground(new java.awt.Color(0, 0, 0));
        jLabel20.setFont(new java.awt.Font("Arial Unicode MS", 1, 14));
        jLabel20.setForeground(new java.awt.Color(255, 255, 255));
        jLabel20.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel20.setText("←");
        jLabel20.setToolTipText("Reverse");
        jLabel20.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jLabel20.setMaximumSize(new java.awt.Dimension(4, 24));
        jLabel20.setMinimumSize(new java.awt.Dimension(2, 12));
        jLabel20.setOpaque(true);
        jLabel20.setPreferredSize(new java.awt.Dimension(20, 24));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 1;
        jPanel3.add(jLabel20, gridBagConstraints);

        jLabel21.setBackground(new java.awt.Color(0, 0, 0));
        jLabel21.setMaximumSize(new java.awt.Dimension(4, 48));
        jLabel21.setMinimumSize(new java.awt.Dimension(2, 24));
        jLabel21.setOpaque(true);
        jLabel21.setPreferredSize(new java.awt.Dimension(4, 48));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridheight = 2;
        jPanel3.add(jLabel21, gridBagConstraints);

        jLabel22.setBackground(new java.awt.Color(0, 0, 0));
        jLabel22.setFont(new java.awt.Font("Arial Unicode MS", 1, 14));
        jLabel22.setForeground(new java.awt.Color(255, 255, 255));
        jLabel22.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel22.setText("→");
        jLabel22.setToolTipText("Forward");
        jLabel22.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        jLabel22.setMaximumSize(new java.awt.Dimension(4, 24));
        jLabel22.setMinimumSize(new java.awt.Dimension(2, 12));
        jLabel22.setOpaque(true);
        jLabel22.setPreferredSize(new java.awt.Dimension(20, 24));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 0;
        jPanel3.add(jLabel22, gridBagConstraints);

        jLabel25.setBackground(new java.awt.Color(0, 0, 0));
        jLabel25.setForeground(new java.awt.Color(255, 255, 255));
        jLabel25.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel25.setText("1");
        jLabel25.setToolTipText("Unit select 1");
        jLabel25.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 9), javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255))));
        jLabel25.setMaximumSize(new java.awt.Dimension(50, 52));
        jLabel25.setMinimumSize(new java.awt.Dimension(24, 24));
        jLabel25.setOpaque(true);
        jLabel25.setPreferredSize(new java.awt.Dimension(48, 48));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridheight = 2;
        jPanel3.add(jLabel25, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        jPanel2.add(jPanel3, gridBagConstraints);

        jLabel23.setBackground(new java.awt.Color(0, 0, 0));
        jLabel23.setMaximumSize(new java.awt.Dimension(22, 224));
        jLabel23.setMinimumSize(new java.awt.Dimension(10, 104));
        jLabel23.setOpaque(true);
        jLabel23.setPreferredSize(new java.awt.Dimension(22, 224));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        jPanel2.add(jLabel23, gridBagConstraints);

        jLabel16.setBackground(new java.awt.Color(0, 0, 0));
        jLabel16.setForeground(new java.awt.Color(255, 255, 255));
        jLabel16.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel16.setMaximumSize(new java.awt.Dimension(50, 88));
        jLabel16.setMinimumSize(new java.awt.Dimension(11, 44));
        jLabel16.setOpaque(true);
        jLabel16.setPreferredSize(new java.awt.Dimension(22, 88));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        jPanel2.add(jLabel16, gridBagConstraints);

        dTReel1.setBackground(new java.awt.Color(0, 0, 0));
        dTReel1.setMaximumSize(new java.awt.Dimension(140, 224));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        jPanel2.add(dTReel1, gridBagConstraints);

        dTReel2.setBackground(new java.awt.Color(0, 0, 0));
        dTReel2.setMaximumSize(new java.awt.Dimension(140, 224));
        dTReel2.setRight(true);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        jPanel2.add(dTReel2, gridBagConstraints);

        dTReel3.setBackground(new java.awt.Color(0, 0, 0));
        dTReel3.setMaximumSize(new java.awt.Dimension(140, 224));
        dTReel3.setUnit(1);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 1;
        jPanel2.add(dTReel3, gridBagConstraints);

        dTReel4.setBackground(new java.awt.Color(0, 0, 0));
        dTReel4.setMaximumSize(new java.awt.Dimension(140, 224));
        dTReel4.setRight(true);
        dTReel4.setUnit(1);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 1;
        jPanel2.add(dTReel4, gridBagConstraints);

        getContentPane().add(jPanel2, new java.awt.GridBagConstraints());

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /** Exit the Application */
    private void exitForm(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_exitForm
        td8e.data.CloseAllDevs();
        //System.exit(0);
    }//GEN-LAST:event_exitForm
    private void dtPropertyChange(java.beans.PropertyChangeEvent evt) {
        Integer objswr = (Integer) evt.getNewValue();
        int val = objswr.intValue();
        int mask = Integer.parseInt(evt.getPropertyName());
        int unit = (mask & 04) >> 2;
        switch (mask & 03) {
            case 0:
                writeLock(unit, val);
                break;
            case 1:
                moveTape(unit, val);
                break;
            case 2:
                selTape(unit, val);
                break;
        }
    }

    private void writeLock(int unit, int val) {
        if (val == 2 & real_wlo[unit] == false) {
            td8e.wlo[unit] = false;
            if (unit == 0) {
                wlLamp0.setBackground(new java.awt.Color(204, 204, 0));
            } else {
                wlLamp1.setBackground(new java.awt.Color(204, 204, 0));
            }
        } else {
            td8e.wlo[unit] = true;
            if (unit == 0) {
                wlLamp0.setBackground(new java.awt.Color(102, 102, 102));
            } else {
                wlLamp1.setBackground(new java.awt.Color(102, 102, 102));
            }
        }
    }

    private void moveTape(int unit, int val) {
        if (local[unit] == true) {
            switch (val) {
                case 2:
                    direction[unit] = 1;
                    break;
                case 0:
                    direction[unit] = 0;
                    break;
                case 1:
                    direction[unit] = -1;
                    break;
            }
        }
    }

    private void selTape(int unit, int val) {
        if (val == 2) {
            td8e.sel[unit] = true;
            local[unit] = false;
        } else {
            td8e.sel[unit] = false;
            if (val == 1) {
                local[unit] = true;
                if (td8e.tape[unit] != null) td8e.line[unit] = (tapesize[unit] - TOTAL_LINES + ENDZONE_LINES) / 2;
            } else {
                local[unit] = false;
            }
        }
    }

    public void selLamp(int unit) {
        if (unit == 0 & td8e.sel[unit]) {
            selLamp0.setBackground(new java.awt.Color(204, 204, 0));
        } else {
            selLamp0.setBackground(new java.awt.Color(102, 102, 102));
        }
        if (unit == 1 & td8e.sel[unit]) {
            selLamp1.setBackground(new java.awt.Color(204, 204, 0));
        } else {
            selLamp1.setBackground(new java.awt.Color(102, 102, 102));
        }
    }

    public void mouseClicked(java.awt.event.MouseEvent e) {
        if (e.isPopupTrigger()) {
            jPopupMenu1.show(e.getComponent(), e.getX(), e.getY());
        }
    }

    public void mouseEntered(java.awt.event.MouseEvent e) {
    }

    public void mouseExited(java.awt.event.MouseEvent e) {
    }

    public void mousePressed(java.awt.event.MouseEvent e) {
        if (e.isPopupTrigger()) {
            jPopupMenu1.show(e.getComponent(), e.getX(), e.getY());
        }
    }

    public void mouseReleased(java.awt.event.MouseEvent e) {
        if (e.isPopupTrigger()) {
            jPopupMenu1.show(e.getComponent(), e.getX(), e.getY());
        }
    }

    public void actionPerformed(java.awt.event.ActionEvent e) {
        AbstractButton x = (AbstractButton) (e.getSource());
        Integer val = new Integer(Integer.parseInt(x.getName()));
        switch (val.intValue() & 07) {
            case 0:
                openTape(0);
                break;
            case 1:
                closeTape(0);
                break;
            case 2:
                openTape(1);
                break;
            case 3:
                closeTape(1);
                break;
            case 4:
                td8e.setWtm(false);
                break;
            case 5:
                setFormat(true);//pdp8 tape
                break;
            case 6:
                setFormat(false);//pdp10 tape
                break;
        }
        repaint();
    }

    private void setFormat(boolean wtm8) {
        if (td8e.tape[0] == null | td8e.tape[1] != null) {
            JOptionPane.showMessageDialog(this,
                    "Unit 0 must have file to format and Unit 1 tape removed!",
                    "Format",
                    JOptionPane.WARNING_MESSAGE);
            nowtm.setSelected(true);
            return;
        }
        boolean test = true;
        try {
            td8e.tape[0].seek(0);
            if (td8e.tape[0].read() != 0x74) {
                test = false;
            }
            if (td8e.tape[0].read() != 0x75) {
                test = false;
            }
            if (td8e.tape[0].read() != 0x35) {
                test = false;
            }
            if (td8e.tape[0].read() != 0x36) {
                test = false;
            }
            if (test) {
                int result = JOptionPane.showConfirmDialog(this,
                        "Are you sure you want to reformat an old file?",
                        "Reformat file?",
                        JOptionPane.YES_NO_CANCEL_OPTION,
                        JOptionPane.WARNING_MESSAGE);
                if (result > 0) {
                    nowtm.setSelected(true);//reset to data
                    return;
                }
            }
            td8e.tape[0].seek(0);
            td8e.tape[0].write(0x74); //t
            td8e.tape[0].write(0x75); //u
            td8e.tape[0].write(0x35); //5
            td8e.tape[0].write(0x36); //6
            if (wtm8) {
                td8e.tape[0].write(0); //-
                td8e.tape[0].write(0); //1
                td8e.tape[0].write(0); //0
            } else {
                td8e.tape[0].write(0x2d); //-
                td8e.tape[0].write(0x31); //1
                td8e.tape[0].write(0x30); //0
                }
            td8e.tape[0].seek(TAPE_LINES / 2 - 1);
            tapesize[0] = TAPE_LINES;
            td8e.tape[0].write(0);
            if (wtm8) {
                td8e.line[0] = FORMAT_FIRST_LINE;
            } else {
                td8e.line[0] = FORMAT_FIRST_LINE_10;
            }
            td8e.setWtm(true);
        } catch (java.io.IOException e) {
            System.out.println(e);
        }
    }

    private void openTape(int unit) {
        int option;
        String dfile = td8e.data.getProp("Dectape-" + unit);
        if (dfile != null) {
            chooser.setSelectedFile(new java.io.File(dfile));
        }
        option = chooser.showOpenDialog(this);
        if (option == javax.swing.JFileChooser.APPROVE_OPTION) {
            java.io.File file = chooser.getSelectedFile();
            if (file != null) {
                closeTape(unit);
                try {
                    real_wlo[unit] = false;
                    if (file.isFile()) {
                        if (file.canWrite()) {
                            td8e.tape[unit] = new java.io.RandomAccessFile(file, "rw");
                        } else if (file.canRead()) {
                            td8e.tape[unit] = new java.io.RandomAccessFile(file, "r");
                            real_wlo[unit] = true;
                        } else {
                            System.out.println("File seems to be busy!");
                        }

                    } else {
                        td8e.tape[unit] = new java.io.RandomAccessFile(file, "rw");
                    }

                    junit[unit].setText("Unit " + unit + ": " + file.getName());
                    td8e.data.setProp("Dectape-" + unit, file.getCanonicalPath());
                } catch (java.io.IOException e) {
                    System.out.println(e);
                }

                if (td8e.tape[unit] != null) {
                    if (file.length() == 0) {
                        try {
                            td8e.tape[unit].seek(TAPE_LINES / 2 - 1);
                            tapesize[unit] = TAPE_LINES;
                            td8e.tape[unit].write(0);
                        } catch (java.io.IOException e) {
                            System.out.println(e);
                        }
                    } else {
                        boolean test = true;
                        try {
                            if (td8e.tape[unit].read() != 0x74) {
                                test = false;
                            }

                            if (td8e.tape[unit].read() != 0x75) {
                                test = false;
                            }

                            if (td8e.tape[unit].read() != 0x35) {
                                test = false;
                            }

                            if (td8e.tape[unit].read() != 0x36) {
                                test = false;
                            }

                            if (test) {
                                tapesize[unit] = (int) file.length() * 2;
                                td8e.line[unit] = (tapesize[unit] - TOTAL_LINES + ENDZONE_LINES) / 2;
                                if (td8e.tape[unit].read() != 0x2d) {
                                    test = false;
                                }

                                if (td8e.tape[unit].read() != 0x31) {
                                    test = false;
                                }

                                if (td8e.tape[unit].read() != 0x30) {
                                    test = false;
                                }

                                if (test) {
                                    td8e.line[unit] = (tapesize[unit] - TOTAL_LINES_10 + ENDZONE_LINES) / 2;
                                }

                            } else {
                                JOptionPane.showMessageDialog(this,
                                        "File not formatted: not tu56 or tu56-10",
                                        "Bad file",
                                        JOptionPane.WARNING_MESSAGE);
                                closeTape(unit);
                            }

                        } catch (java.io.IOException e) {
                            System.out.println(e);
                        }

                    }
                }
            } else {
                System.out.println("No file selected");
            }

        }
    }

    public void closeTape(int unit) {
        if (td8e.tape[unit] != null) {
            try {
                td8e.tape[unit].close();
            } catch (java.io.IOException e) {
            }
            td8e.tape[unit] = null;
            tapesize[unit] = 0;
            td8e.line[unit] = 0;
        }

        junit[unit].setText("Unit " + unit);
    }

    private static class ImageFileFilter
            extends javax.swing.filechooser.FileFilter {

        public boolean accept(java.io.File file) {
            if (file == null) {
                return false;
            }
            return file.isDirectory() || file.getName().toLowerCase().endsWith(".pxg");
        }

        public String getDescription() {
            return "Dectape files (*.pxg)";
        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private Devices.DTReel dTReel1;
    private Devices.DTReel dTReel2;
    private Devices.DTReel dTReel3;
    private Devices.DTReel dTReel4;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPopupMenu jPopupMenu1;
    private Devices.DTSwitch mvSwitch0;
    private Devices.DTSwitch mvSwitch1;
    private Devices.DTSwitch rlSwitch0;
    private Devices.DTSwitch rlSwitch1;
    private javax.swing.JLabel selLamp0;
    private javax.swing.JLabel selLamp1;
    private javax.swing.JLabel wlLamp0;
    private javax.swing.JLabel wlLamp1;
    private Devices.DTSwitch wlSwitch0;
    private Devices.DTSwitch wlSwitch1;
    // End of variables declaration//GEN-END:variables
    public Logic.TD8E td8e;
    public boolean[] local = {false, false};
    public int[] direction = {0, 0};
    public int[] tapesize = {0, 0};
    public boolean[] real_wlo = {false, false};
    //public boolean wtm8 = true;
    JRadioButtonMenuItem nowtm;
    JMenu junit[] = {null, null};
    javax.swing.JFileChooser chooser;
}
